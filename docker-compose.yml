version: '3.9'

###
# Common Configs
### 
x-environment: &default-tz-puid-pgid
  TZ: ${TZ:-America/Denver}
  PUID: ${PUID:-1000}
  PGID: ${PGID--1000}
  GUID: ${GUID:-1000}


services:
###
# Portainer - Manage docker contsainers and stack
###
  portainer:
    image: portainer/portainer-ce:linux-arm64-2.16.2-alpine
    container_name: portainer
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - TZ=${TZ:-America/Denver}
    network_mode: host
    volumes:
      - "/var/lib/docker:/var/lib/docker"
      - "portainer_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

###
# Plex- Media Server
###  
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    network_mode: host
    volumes:
      - "${MEDIA_DIR}/media/movies:/movies"
      - "${MEDIA_DIR}/media/tv:/tv"
      - "/var/lib/docker:/var/lib/docker"
      - "plex_config:/config"

###
# Plex Meta Manager - organize and present media
###
  plex_meta_manager:
    image: "lscr.io/linuxserver/plex-meta-manager:latest"
    container_name: plex_meta_manager
    restart: unless-stopped
    network_mode: host
    depends_on:
      - plex
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Denver}
      - PMM_CONFIG=${PMM_CONFIG:-/config/config.yml} #optional
      - PMM_TIME=${PMM_TIME:-03:00} #optional
      - PMM_RUN=${PMM_RUN:-False} #optional
      - PMM_TEST=${PMM_TEST:-False} #optional
      - PMM_NO_MISSING=${PMM_NO_MISSING:-False} #optional
    volumes:
      - $APPDATA/plex_meta_manager/config/config.yml:/config/config.yml
      - $APPDATA/plex_meta_manager/config:/config

###
# dozzle, unified log interface
###
  dozzle:
    image: amir20/dozzle
    container_name: dozzle
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Denver}
      - DOZZLE_TAILSIZE=300
      - DOZZLE_LEVEL=debug # info trace
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # ports:
      # - 8080:8080
 
###
#  tautulli - Utilities for Plex
###  
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    network_mode: host
    depends_on:
      - plex
    environment:
      - PUID=${PUID:-1000}
      - PGID=${GUID:-1000}
      - GUID=${GUID:-1000} 
      - TZ=${TZ:-America/Denver}
    volumes:
      - $APPDATA/tautulli/config:/config
      - $PLEX_LOGS:/plexlogs
        # ports:
        # - 8181:8181
    restart: unless-stopped

###
# Airsonic advanced
###
  airsonic:
    image: lscr.io/linuxserver/airsonic-advanced:latest
    container_name: airsonic
    network_mode: host
    volumes:
      - $MEDIA_DIR/media/audio:/music
      - $MEDIA_DIR/media/audio/playlists:/playlists
      - $MEDIA_DIR/media/podcasts:/podcasts
      - $APPDATA/airsonic/config:/config
    environment:
      - PUID=${PUID:-1000}
      - PGID=${GUID:-1000}
    #  - GUID=${GUID:-1000} 
      - TZ=${TZ:-Etc/UTC}
    restart: unless-stopped
#    device:
#      - /dev/snd

###
# Heimdall
###
  heimdall: 
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    ports:
      - 8010:80
      - 8443:443 
    volumes:
      - $APPDATA/heimdall/config:/config
    environment:
      - PUID=${PUID:-1000}
      - PGID=${GUID:-1000}
#      - GUID=${GUID:-1000} 
      - TZ=${TZ:-America/Denver}
    restart: unless-stopped
    #networks:
    #  - default

###
# Dashy alternative to heimdall
###
  
  dashy:
    # To build from source, replace 'image: lissy93/dashy' with 'build: .'
    # build: .
    image: lissy93/dashy
    container_name: dashy
    # Pass in your config file below, by specifying the path on your host machine
    volumes:
      - $APPDATA/dashy/public/config.yml:/app/public/conf.yml
    ports:
      - 4000:80
    # Set any environmental variables
    environment:
    #  - NODE_ENV=production
    # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
      - UID=${PUID:-1000}
      - GID=${GUID:-1000}
      - TZ=${TZ:-America/Denver}
    # Specify restart policy
    restart: unless-stopped
    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

####
# network connectivity monitor
####
  smokeping:
    image: lscr.io/linuxserver/smokeping:latest
    container_name: smokeping
    environment:
      - PUID=${PUID:-1000}
      - PGID=$(PGID:-995}
      - TZ=${TZ:-America/Denver}
    volumes:
      - $APPDATA/smokeping:/config
      - $MEDIA_DIR/appdata/smokeping/data:/data
    ports:
      - 84:80
    restart: unless-stopped
 
###
# Watchtoer to automate updates
###
  watchtower:
    image: containrrr/watchtower:arm64
    container_name: watchtower
    restart: unless_stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=$(PGID:-995}
      - TZ=${TZ:-America/Denver}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#    command: --interval 3600


####
# System Volumes
####
volumes:
  plex_config:
    external: true
  portainer_data:
    external: true
  
  ###
  # Networks
  ###
  #networks:
  #  default:
  #    driver: bridge
