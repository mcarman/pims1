version: '3.9'

#####
# Common Configs
##### 
x-environment: &tz-puid-pgid
  - TZ=${TZ:-Etc/UTC}
  - PUID=${PUID:-1000}
  - PGID=${PGID--1000}

#####
# services section
#####
services:

###
# Portainer - Manage docker contsainers and stack
###
  portainer:
    image: portainer/portainer-ce:linux-arm64-2.16.2-alpine
    container_name: portainer
    hostname: portainer
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}  
    networks:
      - media_net
    ports:
      - "9000:9000"
      - "9443:9443"
      - "8000:8000"  
    volumes:
      - "/var/lib/docker:/var/lib/docker"
      - "portainer_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

###
# Plex- Media Server
###  
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    hostname: plex  
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    network_mode: host
    volumes:
      - "${MEDIA_DIR}/media/Movies:/movies"
      - "${MEDIA_DIR}/media/tv:/tv"
      - "/var/lib/docker:/var/lib/docker"
      - "plex_config:/config"
    restart: unless-stopped

###
# Plex Meta Manager - organize and present media
###
  plex_meta_manager:
    image: lscr.io/linuxserver/plex-meta-manager:latest
    container_name: plex_meta_manager
    restart: unless-stopped
    network_mode: host
    depends_on:
      - plex
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
      - PMM_CONFIG=${PMM_CONFIG:-/config/config.yml} #optional
      - PMM_TIME=${PMM_TIME:-03:00} #optional
      - PMM_RUN=${PMM_RUN:-False} #optional
      - PMM_TEST=${PMM_TEST:-False} #optional
      - PMM_NO_MISSING=${PMM_NO_MISSING:-False} #optional
    volumes:
      - $APPDATA/plex_meta_manager/config:/config
    command: -r

###
# dozzle, unified log interface
###
  dozzle:
    image: amir20/dozzle
    container_name: dozzle
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - GUID=${GUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
      - DOZZLE_TAILSIZE=300
      - DOZZLE_LEVEL=debug # info trace
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - media_net
    ports:
      - 8080:8080
 
###
#  tautulli - Utilities for Plex
###  
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    hostname: tautulli
    depends_on:
      - plex
    environment:
    #  &tz-puid-pgid
      - PUID=${PUID:-1000}
      - PGID=${GUID:-1000}
      - GUID=${GUID:-1000} 
      - TZ=${TZ:-Etc/UTC}
    networks:
      - media_net
    ports:
      - "8181:8181"
    volumes:
      - $APPDATA/tautulli/config:/config
      - $PLEX_LOGS:/plexlogs
    restart: unless-stopped

###
# Airsonic advanced
###
  airsonic:
    image: lscr.io/linuxserver/airsonic-advanced:latest
    volumes:
      - $MEDIA_DIR/media/audio:/music
      - $MEDIA_DIR/media/audio/playlists:/playlists
      - $MEDIA_DIR/media/podcasts:/podcasts
      - $APPDATA/airsonic/config:/config
    networks:
      - media_net
    ports:
      - 4040:80
    environment:
      - PUID=${PUID:-1000}
      - PGID=${GUID:-1000}
    #  - GUID=${GUID:-1000} 
      - TZ=${TZ:-Etc/UTC}
    restart: unless-stopped
#    device:
#      - /dev/snd

###
# Heimdall homepage with links to all apps
###
  heimdall: 
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    networks:
      - media_net
    ports:
      - 8010:80
      - 8443:443 
    volumes:
      - $APPDATA/heimdall/config:/config
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
    restart: unless-stopped
    #networks:
    #  - default

###
# Dashy alternative to heimdall
###
  dashy:
    # To build from source, replace 'image: lissy93/dashy' with 'build: .'
    # build: .
    image: lissy93/dashy
    container_name: dashy
    # Pass in your config file below, by specifying the path on your host machine
    volumes:
      - $APPDATA/dashy/public/config.yml:/app/public/conf.yml
    networks: 
      - media_net
    ports:
      - 4000:80
    environment:
    #  - NODE_ENV=production
      - UID=${PUID:-1000}
      - GID=${GUID:-1000}
      - TZ=${TZ:-Etc/UTC}
    restart: unless-stopped
    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

###
# Smokeping network connectivity monitor
###
  smokeping:
    build:
      context: ${DOCKER_DIR}/docfile/smokeping/
      dockerfile: Dockerfile.smokeping
      #args: 
      #  BUILD_DATE:
      #  VERSION:
    image: lscr.io/linuxserver/smokeping:latest
    container_name: smokeping
    hostname: smokeping
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
    volumes:
      - $APPDATA/smokeping/config:/config
      - $MEDIA_DIR/appdata/smokeping/data:/data
    networks:
      - media_net
    ports:
      - 780:80
    restart: unless-stopped

###
# Samba file share on windows and linux fs
###
  samba:
    image: docker.io/brightopia/samba:latest 
    #image: mdccarman/samba:4.0
    #build:
    #  context: ${DOCKER_DIR}/docfile/samba/
    #  dockerfile: Dockerfile.samba
      #args:
      #  BUILD_DATE: 
      #  VERSION:
      #  VCS_REF:
    # image_name: linuxcontainer/debian-slim:11.7
    container_name: samba
    hostname: samba
    environment:
      - USERID=${PUID:-1000}
      - GROUPID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
    volumes:
      - $APPDATA/samba/smb.conf:/etc/samba/smb.conf
      - $MEDIA_DIR/media/:/mount/
    networks:
      - media_net
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139"
      - "145:145"
    restart: unless_stopped

    restart: unless-stopped


###
# Watchtower to automate updates
###
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-Etc/UTC}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#    command: --interval 3600


###
# cloudflare for dns
###
#  cloudflare-ddns:
#    image: oznu/cloudflare-ddns:latest
#    restart: unless-stopped
#    environment:
#      - API_KEY=${CF_API_TOKEN]
      # - ZONE=bret.dk
#      - SUBDOMAIN=ddns
#      - PROXIED=false 
#      - PUID=${PUID:-1000}
#      - PGID=${PGID:-1000}
#      - TZ=${TZ:-Etc/UTC}
#    networks:
#      - media_net

####
# System Volumes
####
volumes:
  plex_config:
    external: true
  portainer_data:
    external: true
  
  ####
  # Networks
  ####
networks:
  media_net:
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/24
